  - name: disable nodejs module
    ansible.builtin.command: dnf module disable nodejs -y

  - name: Enable NodeJS:20 and Install NodeJS:20  
    ansible.builtin.package: 
      name: "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql

  - name: create login_user
    ansible.builtin.user:
      name: "expense"
      
  - name: import tasks from common role
    ansible.builtin.import_role:
      name: common  
      tasks_from: main.yaml 
  
  # The below code is moved to common role


  # - name: create app directory
  #   ansible.builtin.file:
  #     path: /app
  #     state: directory    

  # - name: download backend code
  #   ansible.builtin.get_url:
  #     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
  #     dest: /tmp/backend.zip
    
  # - name: unzip backend code
  #   ansible.builtin.unarchive:    
  #     src: /tmp/backend.zip
  #     dest: /app
  #     remote_src: yes

  - name: install npm packages
    ansible.builtin.command: npm install
    args:
      chdir: /app  
  
  - name: copy backend service file # copy only works for files without variables
    ansible.builtin.template: # changed from copy to template
      src: backend.service.j2  # changed from backend.service to backend.service.j2 
      dest: /etc/systemd/system/backend.service

  - name: ansible to install pymysql
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9

  - name: import mysql database
    community.mysql.mysql_db:
      login_user: root  
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"  
      target: /app/schema/backend.sql
      name: all
      state: import
 
  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true
      state: restarted
      name: backend    
